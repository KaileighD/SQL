# For this project, I downloaded Spotify data.
# Then I created a table to insert the Spotify data into.
# Lastly, I created questions and used SQL to answer them.

#Creating the table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.

#1. Who are the top 10 artists based on popularity?
SELECT artist_name, AVG(popularity) AS average_popularity
FROM Spotifydata
GROUP BY artist_name
ORDER BY average_popularity desc
LIMIT 10;

#2. What's the average danceability for the 10 most popular songs?
SELECT AVG(danceability) AS average_danceability
FROM Spotifydata
ORDER BY popularity DESC
LIMIT 10;

#3. What is the average loudness of songs for the artist who has the longest song in the dataset?
SELECT AVG(loudness) AS average_loudness
FROM Spotifydata
WHERE artist_name=
(SELECT artist_name
FROM Spotifydata
ORDER BY duration_ms desc
LIMIT 1);

#4. What is the total duration of songs for the artist with the highest average danceability?
SELECT artist_name, SUM(duration_ms)/60000 AS total_duration_minutes
FROM Spotifydata
WHERE artist_name =
(SELECT artist_name
FROM Spotifydata
GROUP BY artist_name
ORDER BY AVG(danceability) desc
LIMIT 1);
